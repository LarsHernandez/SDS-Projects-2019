---
title: "M1 Mini Assignment 1"
author: "Lars Nielsen"
date: "9/9/2019"
output: html_document
---

# M1 Mini-Assignment 1

You are given 2 datasets from https://nomadlist.com/ - A community page for remote workersworldwide.

- The trips data holds ~46k individual trips of travellers on the platform https://github.com/SDS-AAU/M1-2019/raw/master/data/trips.csv

- People contains some personal information on 4k travelers https://github.com/SDS-AAU/M1-2019/raw/master/data/people.csv

- Finally, you find a countrylist file that holds countrycodes, contrynames and region-associations https://github.com/SDS-AAU/M1-2019/raw/master/data/countrylist.csv

```{r message=FALSE, include=FALSE}
library(data.table)
library(ggplot2)

trips       <- fread("https://github.com/SDS-AAU/M1-2019/raw/master/data/trips.csv")
people      <- fread("https://github.com/SDS-AAU/M1-2019/raw/master/data/people.csv")
countrylist <- fread("https://github.com/SDS-AAU/M1-2019/raw/master/data/countrylist.csv")
```

Your solution approach is more important than the results obtained! Comment your notebook well, explaining all the steps of your analysis. Small technicalexplanations can go as comments in the code. Broader explanations should be inserted asmarkdown cells.Remember that notebooks execute sequentially.

Submission: Wednesday 11.9. 12:00. 

Peergrade.io (link + submission details will be sent out onMonday, 9.9)

## 1. Preprocessing
###a.Trips: transform dates into timestamps (note: in Python, you will have to ‘coerce’ errors forfaulty dates)
```{r}
trips[,c("date_end", "date_start") := .(as.Date(date_end, "%Y-%m-%d"), as.Date(date_start, "%Y-%m-%d"))]

head(trips$date_end, 5)
```  


###b.Calculate trip duration in days (you can use loops, list comprehensions ormap-lambda-functions (python) to create a column that holds the numerical value of theday. You can also use the “datetime” package.)
```{r}
trips[, dur_days := date_end - date_start]

head(trips$dur_days, 5)
```  


###c. Filter extreme (fake?) observations for durations as well as dates - start and end (trips thatlast 234565 days / are in the 17th or 23rd century)The minimum duration of a trip is 1 day!Hint: use percentiles/quantiles to set boundaries for extreme values - between 1 and 97, calculate and store the boundaries before subsetting. Rhint: Use percent_rank(as.numeric(variable)) to create percentiles
```{r message=FALSE, warning=FALSE}
trips[, quantile := dplyr::percent_rank(as.numeric(trips$dur_days))]
trips_s <- trips[quantile >= 0.01 & quantile <= 0.97]

range(na.omit(trips$dur_days))
range(trips_s$dur_days)
```

  
###d. Join the countrylist data to the trips data-frame using the countrycode as a key
```{r}
countrylist[, country_code := alpha_2]
trips_s[countrylist, on = "country_code", c("region", "sub_region") := .(i.region, i.sub_region)]

head(trips_s[,.(country_code, dur_days, region, sub_region)])
```








##2.People
###a.How many people have at least a “High School” diploma? Hint: For this calculation remove missing value-rows or fill with “False”
```{r}
people_s <- people[education_raw != ""]
table(people_s$education_raw)

people_s[,.N]

people[, high_school := education_raw %like% "High|Master|Bachelor"]
```


###b.How many people working with “Software Dev” have a “Master's Degree”?
```{r}
people_s[work_raw %like% "Software Dev" & education_raw %like% "Master", .N]
```


###c.Who is the person with a Master's Degree that has the highest number of followers?[Explore who this person is. :-) ]
```{r}
c <- people_s[education_raw %like% "Master"][order(-followers)]

head(c)
people_s[username == "@levelsio"]
```




##3.Trips
###a.Which country received the highest number of trips?
```{r}
a <- trips_s[, .N, by = country][order(-N)]
head(a)
```

  
###b.Which country received the highest number of trips in 2017? Use the start of trips as a timereference.  (python: use datetimeindex created in 1 as a selector)?Rhint: Use functions from lubridate package to extract year.

```{r}
b <- trips_s[year(date_start) == 2017, .N, by = country][order(-N)]
head(b)
```
  
  
###c.Which is the country in 'Eastern Asia' where travellers spent on average least time whengoing there? Provide a visualization.
```{r}
c <- trips_s[sub_region == 'Eastern Asia', .(mean_dur = mean(dur_days), total = .N), by = country][order(mean_dur)]
c

ggplot(c, aes(reorder(country, mean_dur), mean_dur)) + 
  geom_col() + 
  scale_y_continuous() +
  labs(title = "Mean duration of stay in East Asian countries")
```


###d.Do nomads that indicate working in “Software Dev” tend to have shorter or longer trips onaverage?
```{r}
trips_s[people, on = "username", c("work_raw") := .(i.work_raw)]
trips_s[, dev := work_raw %like% "Software Dev"]
trips_s[,.(mean_dur = mean(dur_days)), by = dev]
```

  
###e.Visualize over-time median trip duration overall (bonus: and split by world-region).You will get a weird looking plot :-)
```{r}
e1 <- trips_s[, .(mean_dur = mean(dur_days)), by = year(date_start)][year>1970 & year < 2019]

ggplot(e1, aes(year, mean_dur)) + 
  scale_y_continuous() +
  geom_line()

e2 <- trips_s[, .(mean_dur = mean(dur_days)), by = .(year(date_start), region)][year>1970 & year < 2019]

ggplot(e2, aes(year, mean_dur)) + 
  scale_y_continuous() +
  geom_line() + 
  facet_wrap(~region)
```












